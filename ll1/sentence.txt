	program @ block
	block@{ decls  stmts }
	decls @ decls’
	decls’ @ decl decls’
	decls’ @ ε
	decl @ type  id ;
	type@ basic type’
	type’@ [ num ] type’
	type’@ ε
	stmts @ stmts’
	stmts’ @ stmt stmts’
	stmts’ @ ε
	stmt @ loc = bool ;
	stmt @ if ( bool ) stmt A
	stmt @ while ( bool ) stmt
	stmt @ do stmt while ( bool ) ;
	stmt @ break ; 
	stmt @ block
	A @ else stmt
	A @ ε
	loc@ id loc’
	loc’@ [ num ] loc’
23.	loc’@ ε
24.	bool @ join bool’
25.	bool’ @ ||  join bool’
26.	bool’ @ ε
27.	join @ equality join’
28.	join’ @ && equality join’
29.	join’ @ ε
30.	equality @ rel equality’
31.	equality’ @ == rel equality’
32.	equality’ @ != rel equality’
33.	equality’ @  ε
34.	rel  @expr B 
35.	B   @< expr
36.	B   @<= expr
37.	B   @>= expr
38.	B   @> expr
39.	B   @ ε
40.	expr @ term expr’
41.	expr’ @ + term expr’
42.	expr’ @- term expr’
43.	expr’ @ ε
44.	term @ unary term’
45.	term’ @ * unary term’
46.	term’ @ / unary term’ 
47.	term’ @ ε
48.	unary@ ! unary 
49.	unary@ - unary
50.	unary@ factor
51.	factor@ ( bool )
52.	factor@ loc 
53.	factor@ num 
54.	factor@ real 
55.	factor@ true 
56.	factor@ false


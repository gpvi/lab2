program@ block
block@ { decls stmts }
decls@ decls decl
decls@ ε
decl@ type id ;
type@ type [ num ]
type@ basic
stmts@ stmts stmt
stmts@ ε
stmt@ loc = bool ;
stmt@ if ( bool ) stmt
stmt@ if ( bool ) stmt else stmt
stmt@ while ( bool ) stmt
stmt@ do stmt while ( bool ) ;
stmt@ break ;
stmt@ block
Loc@ loc [ num ]
Loc@ id
bool@ bool || join
bool@ join
join@ join && equality
join@ equality
equality@ equality == rel
equality@ equality != rel
equality@ rel
rel@ expr < expr
rel@ expr <= expr
rel@ expr >= expr
rel@ expr > expr
rel@ expr
